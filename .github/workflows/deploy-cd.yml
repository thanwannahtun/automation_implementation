name: Deploy to Firebase

on:
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:
    inputs:
      release_notes:
        type: string
        required: true
        default: 'Manual Debug Build'
        description: 'Release Notes'


jobs:
  deploy:
    name: Building and distributing app
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Install jq
      # jq is used to parse JSON when downloading the build artifact
      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      # Step 3: Set Up Flutter
      - name: Set Up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.3'
          channel: 'stable'
          cache: true

      # Step 4: Download build artifact from the latest release
      - name: Download Build Artifact from Release
        run: |
          curl -L -o android_builds.tar.gz \
          "$(curl -s https://api.github.com/repos/${{ github.repository }}/releases/latest \
          | jq -r '.assets[] | select(.name == "android_builds.tar.gz").browser_download_url')"


      # Step 5: Extract the downloaded artifact
      - name: Extract Artifact
        run: |
          mkdir deploy_output
          tar -xzf android_builds.tar.gz -C deploy_output

      - name: Check APK File
        run: ls deploy_output/app/outputs/flutter-apk/

      - name: Upload Artifact to Firebase App Distribution
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
          appId: ${{ secrets.FIREBASE_APP_ID }}
          serviceCredentialsFileContent: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_KEY }}
          groups: ${{ secrets.FIREBASE_TESTER_GROUPS }}
          file: deploy_output/app/outputs/flutter-apk/app-release.apk
          #          file: app/build/outputs/apk/debug/app-debug.apk
          releaseNotes: ${{ github.event.inputs.release_notes }}
#          releaseNotes: ${{ inputs.release_notes }}


      #      - name: Deploy to Firebase App Distribution
      #        run: firebase appdistribution:distribute deploy_output/app/outputs/flutter-apk/app-release.apk \
      #          --app ${{ secrets.FIREBASE_APP_ID }} \
      #          --groups ${{ secrets.FIREBASE_TESTER_GROUPS }}
      #          --release-notes "Bug fixes and improvements"
      #          --debug
      #        env:
      #          GOOGLE_APPLICATION_CREDENTIALS: $HOME/firebase-key.json

      # Optional: Debug Firebase CLI output
      - name: Debug Firebase Output
        run: echo "Firebase Distribution Completed!"